name: Quality Gate

on:
    pull_request:
        branches: [ main ]
        types: [ opened, synchronize, reopened ]

jobs:
    quality-gate:
        name: Quality Gate Analysis
        runs-on: ubuntu-latest

        steps:
            -   name: Checkout code
                uses: actions/checkout@v4
                with:
                    fetch-depth: 0 # Fetch full history for better analysis

            -   name: Set up JDK 17
                uses: actions/setup-java@v4
                with:
                    java-version: '17'
                    distribution: 'temurin'

            -   name: Setup Gradle
                uses: gradle/actions/setup-gradle@v3

            -   name: Make gradlew executable
                run: chmod +x ./gradlew

            # Clean build to ensure fresh state
            -   name: Clean Project
                run: ./gradlew clean

            # Run all quality checks
            -   name: Run Code Quality Checks
                run: ./gradlew codeQuality
                continue-on-error: true

            # Run tests with coverage if possible
            -   name: Run All Tests
                run: ./gradlew test --continue

            # Build to ensure compilation
            -   name: Build Project
                run: ./gradlew assemble

            # Generate comprehensive report
            -   name: Generate Quality Report
                if: always()
                run: |
                    echo "# 📊 Quality Gate Report" >> quality-report.md
                    echo "" >> quality-report.md
                    echo "## 🧪 Test Results" >> quality-report.md

                    # Count test results
                    if find . -name "TEST-*.xml" -type f | head -1 | xargs test -f; then
                      TOTAL_TESTS=$(find . -name "TEST-*.xml" -exec grep -h "tests=" {} \; | sed 's/.*tests="\([0-9]*\)".*/\1/' | awk '{sum += $1} END {print sum}')
                      FAILED_TESTS=$(find . -name "TEST-*.xml" -exec grep -h "failures=" {} \; | sed 's/.*failures="\([0-9]*\)".*/\1/' | awk '{sum += $1} END {print sum}')
                      ERROR_TESTS=$(find . -name "TEST-*.xml" -exec grep -h "errors=" {} \; | sed 's/.*errors="\([0-9]*\)".*/\1/' | awk '{sum += $1} END {print sum}')

                      echo "- Total Tests: ${TOTAL_TESTS:-0}" >> quality-report.md
                      echo "- Failed Tests: ${FAILED_TESTS:-0}" >> quality-report.md
                      echo "- Error Tests: ${ERROR_TESTS:-0}" >> quality-report.md
                    else
                      echo "- No test results found" >> quality-report.md
                    fi

                    echo "" >> quality-report.md
                    echo "## 🎯 Code Quality" >> quality-report.md

                    # Check for Detekt results
                    if find . -path "*/reports/detekt/*" -name "*.xml" | head -1 | xargs test -f; then
                      echo "- Detekt analysis completed ✅" >> quality-report.md
                    else
                      echo "- Detekt analysis not found ⚠️" >> quality-report.md
                    fi

                    # Check for KtLint results
                    if find . -path "*/reports/ktlint/*" -name "*.txt" | head -1 | xargs test -f; then
                      echo "- KtLint formatting checked ✅" >> quality-report.md
                    else
                      echo "- KtLint results not found ⚠️" >> quality-report.md
                    fi

                    echo "" >> quality-report.md
                    echo "## 🏗️ Build Status" >> quality-report.md
                    if [ -f "app/build/outputs/apk/debug/app-debug.apk" ]; then
                      echo "- Build successful ✅" >> quality-report.md
                    else
                      echo "- Build failed ❌" >> quality-report.md
                    fi

            -   name: Upload Quality Report
                if: always()
                uses: actions/upload-artifact@v4
                with:
                    name: quality-report
                    path: quality-report.md
                    retention-days: 30

            -   name: Upload All Reports
                if: always()
                uses: actions/upload-artifact@v4
                with:
                    name: all-quality-reports
                    path: |
                        **/build/reports/
                        **/build/test-results/
                    retention-days: 30

            -   name: Comment PR with Quality Gate
                if: always() && github.event_name == 'pull_request'
                uses: actions/github-script@v7
                with:
                    script: |
                        const fs = require('fs');

                        let comment = '## 🚦 Quality Gate Results\n\n';

                        // Read the quality report if it exists
                        try {
                          const report = fs.readFileSync('quality-report.md', 'utf8');
                          comment += report;
                        } catch (error) {
                          comment += 'Quality report generation failed. Check the workflow logs for details.\n';
                        }

                        comment += '\n---\n*Generated by MortApp CI/CD Pipeline* 🤖';

                        github.rest.issues.createComment({
                          issue_number: context.issue.number,
                          owner: context.repo.owner,
                          repo: context.repo.repo,
                          body: comment
                        });
